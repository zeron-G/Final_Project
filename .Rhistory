knitr::opts_chunk$set(echo = FALSE)
na.ts.ses<-ses(na.ts, h=100)
library(fpp2)
library(rmarkdown)
library(itsmr)
library(readr)
accuracy(fc,myts.test)
ss<-read_csv("data/000001ss.csv")
na<-read_csv("data/NASDAQ.csv")
ss.ts<-ts(ss[,"Close"])
na.ts<-ts(na[,"Close"])
na.log<-ts(log(na[,"Close"]))
ss.log<-ts(log(ss[,"Close"]))
na.diff<-diff(na.ts)
ss.diff<-diff(ss.ts)
na.logd<-diff(na.log)
ss.diff<-diff(ss.log)
test(na.ts)
test(na.diff)
test(na.log)
test(na.logd)
myts <- ts(na.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
fc <- auto.arima(myts.train)
future <- forecast::forecast(fc, h=50)
autoplot(future,h=100,include = 100)
checkresiduals(fc)
accuracy(fc,myts.test)
testaccuracy(fc,myts.test)
len(na.log)
length(na.log)
length(myts)
length(myts)
length(myts)
length(myts)/30
myts <- ts(na.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
fc <- auto.arima(myts.train)
myts <- ts(na.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
fc <- auto.arima(myts.train)
future <- forecast::forecast(fc, h=20)
autoplot(future,h=100,include = 100)
checkresiduals(fc)
accuracy(future,myts.test)
na.ts.ses<-ses(na.ts, h=100)
na.ts.holt<-holt(na.ts, h=100)
na.ts.sesd<-ses(na.ts,damped=TRUE, h=100)
na.ts.holtd<-holt(na.ts,damped=TRUE, h=100)
autoplot(na.ts.ses)
autoplot(na.ts.holt)
autoplot(na.ts.sesd)
autoplot(na.ts.holtd,include=200)
summary(na.ts.ses)
summary(na.ts.holt)
summary(na.ts.sesd)
summary(na.ts.holtd)
res.holtd<-residuals(na.ts.holtd)
test(res.holtd)
na.ts.log<-log(na.ts)
autoplot(na.ts.log)
test(na.ts.log)
na.logd<-diff(na.ts.log)
autoplot(na.logd)
test(na.logd)
na.arima<-auto.arima(na.ts.log)
autoplot(na.arima)
future <- forecast::forecast(na.arima, h=12)
autoplot(future,include=100)
na.log<-log(na.ts)
autoplot(ets(na.log))
na.log<-log(na.ts)
checkresiduals(ets(na.log))
checkresiduals(ss.tsd)
ets(ss.ts)
autoplot(forecast::forecast(ets(ss.ts)))
str(ss.ts)
head(ss.ts)
ss.ts.ses <- ses(ss.ts, h = 400)
autoplot(ss.ts.ses) +
autolayer(ss.ts.ses$fitted)
ss.ts.ses$model
knitr::opts_chunk$set(echo = FALSE)
length(myts/30)
length(myts30)
length(myts)/30
View(ss)
View(ss)
View(na)
myts <- ts(ss.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
library(fpp2)
library(rmarkdown)
library(itsmr)
library(readr)
myts <- ts(ss.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
fc <- auto.arima(myts.train)
future <- forecast::forecast(fc, h=20)
autoplot(future,h=100,include = 100)
checkresiduals(fc)
na<-read_csv("data/NASDAQ.csv")
dji<-read_csv("data/DJI.csv")
na<-read_csv("data/NASDAQ.csv")
dji<-read_csv("data/DJIA.csv")
spx<-read_csv("data/SPX.csv")
na<-read_csv("data/NASDAQ.csv")
dji<-read_csv("data/DJIA.csv")
spx<-read_csv("data/SPX.csv")
dji.ts<-ts(dji[,"Close"])
na.ts<-ts(na[,"Close"])
na.log<-ts(log(na[,"Close"]))
dji.log<-ts(log(dji[,"Close"]))
na.diff<-diff(na.ts)
dji.diff<-diff(dji.ts)
na.logd<-diff(na.log)
dji.diff<-diff(dji.log)
test(na.ts)
test(na.diff)
test(na.log)
test(na.logd)
myts <- ts(na.log, frequency=30)
myts.train <- window(myts,end=150)
myts.test <- window(myts,start=150)
autoplot(myts) +
autolayer(myts.train, series="Training") +
autolayer(myts.test, series="Test")
fc <- auto.arima(myts.train)
future <- forecast::forecast(fc, h=20)
autoplot(future,h=100,include = 100)
checkresiduals(fc)
accuracy(future,myts.test)
